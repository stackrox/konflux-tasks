apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: determine-image-expiration
spec:
  description: Determines the image expiration parameter, or sets to empty for git-tagged builds.
  params:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the artifact with the application source code. This should be the
      result of the git-clone task.
    type: string
  - name: DEFAULT_IMAGE_EXPIRES_AFTER
    description: Default image expiration.
    type: string
  results:
  - name: IMAGE_EXPIRES_AFTER
    description: Image expiration as a duration, e.g. `13w`.
  volumes:
  - name: workdir
    emptyDir: { }
  stepTemplate:
    volumeMounts:
    - mountPath: /var/workdir
      name: workdir
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
    computeResources:
      requests:
        memory: 2Gi
      limits:
        memory: 2Gi
    args:
    - use
    - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - name: determine-image-expiration
    # We need git and toolbox image has it.
    image: registry.access.redhat.com/ubi9/toolbox:latest@sha256:163481fc0ea228f1274e900f8fbe622ff71581c2e2e71b6961e000b4ae198491
    env:
    - name: SOURCE_BRANCH
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['pipelinesascode.tekton.dev/source-branch']
    - name: TARGET_BRANCH
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['pipelinesascode.tekton.dev/branch']
    workingDir: /var/workdir/source
    script: |
      #!/usr/bin/env bash

      set -euo pipefail

      echo "Default image expiration: $(params.DEFAULT_IMAGE_EXPIRES_AFTER)"
      echo "SOURCE_BRANCH: ${SOURCE_BRANCH}"
      echo "TARGET_BRANCH: ${TARGET_BRANCH}"

      # TODO(ROX-28001): Update the expiration logic for -fast releases.

      # Normalize branch names because Konflux sometimes prepends refs/heads/ and sometimes doesn't.
      # Similarly, we don't want to run into issues when Konflux puts refs/tags/ in one and forgets about the other.
      SOURCE_BRANCH_SANITIZED="${SOURCE_BRANCH#refs/heads/}"
      TARGET_BRANCH_SANITIZED="${TARGET_BRANCH#refs/heads/}"
      SOURCE_BRANCH_SANITIZED="${SOURCE_BRANCH_SANITIZED#refs/tags/}"
      TARGET_BRANCH_SANITIZED="${TARGET_BRANCH_SANITIZED#refs/tags/}"

      if [[ "${SOURCE_BRANCH_SANITIZED}" == "${TARGET_BRANCH_SANITIZED}" && \
        -n "$(git tag --points-at | grep -vF -- '-nightly-')" ]]; then
        # The condition above reads as: this is not a PR and there's a git tag which is not nightly.
        # We don't check for `refs/tags/*` in SOURCE|TARGET_BRANCH because it won't be there when the tagged build is
        # re-triggered with /test or /retest comment.
        echo "This is a tagged build and not a nightly. The images won't expire. IMAGE_EXPIRES_AFTER will be empty."
        IMAGE_EXPIRES_AFTER=""
      else
        IMAGE_EXPIRES_AFTER="$(params.DEFAULT_IMAGE_EXPIRES_AFTER)"
      fi

      echo -n "${IMAGE_EXPIRES_AFTER}" | tee "$(results.IMAGE_EXPIRES_AFTER.path)"
