apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: determine-image-expiration
spec:
  description: Determines the image expiration parameter, or sets to empty for git-tagged builds.
  params:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the artifact with the application source code. This should be the
      result of the git-clone task, results from other tasks might fail as dirty.
    type: string
  - name: DEFAULT_IMAGE_EXPIRES_AFTER
    description: Default image expiration.
    type: string
  results:
  - name: IMAGE_EXPIRES_AFTER
    description: Image expiration as a duration, e.g. `13w`.
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
    computeResources:
      requests:
        memory: 2Gi
      limits:
        memory: 2Gi
    args:
    - use
    - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - name: determine-image-expiration
    image: registry.access.redhat.com/ubi9:latest@sha256:304b50df1ea4db9706d8a30f4bbf26f582936ebc80c7e075c72ff2af99292a54
    env:
    - name: PIPELINE_EVENT_TYPE
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['pipelinesascode.tekton.dev/event-type']
    - name: PIPELINE_TARGET_BRANCH
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['build.appstudio.redhat.com/target_branch']
    script: |
      #!/usr/bin/env bash

      set -euo pipefail

      echo "Default image expiration: $(params.DEFAULT_IMAGE_EXPIRES_AFTER)"
      echo "Event type: ${PIPELINE_EVENT_TYPE}"
      echo "Target branch: ${PIPELINE_TARGET_BRANCH}"

      local is_retest_tagged_build="no"
      if [[ "${PIPELINE_EVENT_TYPE}" == "retest-comment" ]]; then
        echo "This is a retested build, checking if tagged."
        dnf -y install git

        if [ "$(git tag --points-at | wc -l)" -gt 0 ]; then
          echo "This is retested pipelinerun of a tagged build"
          is_retest_tagged_build="yes"
        fi
      fi

      # TODO(ROX-28001): Update the expiration logic for -fast releases.
      if [[ "${PIPELINE_EVENT_TYPE}" != "pull_request" && (("${PIPELINE_TARGET_BRANCH}" == refs/tags/* && "${PIPELINE_TARGET_BRANCH}" != *-nightly-*) || is_retest_tagged_build == "yes") ]]; then
        echo "This is a tagged build and not a nightly. The images won't expire. IMAGE_EXPIRES_AFTER will be empty."
        IMAGE_EXPIRES_AFTER=""
      else
        IMAGE_EXPIRES_AFTER="$(params.DEFAULT_IMAGE_EXPIRES_AFTER)"
      fi
      echo -n "${IMAGE_EXPIRES_AFTER}" | tee "$(results.IMAGE_EXPIRES_AFTER.path)"
