apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: determine-image-expiration
spec:
  description: Determines the image expiration parameter, or sets to empty for git-tagged builds.
  params:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the artifact with the application source code. This should be the
      result of the git-clone task.
    type: string
  - name: DEFAULT_IMAGE_EXPIRES_AFTER
    description: Default image expiration.
    type: string
  results:
  - name: IMAGE_EXPIRES_AFTER
    description: Image expiration as a duration, e.g. `13w`.
  volumes:
  - name: workdir
    emptyDir: { }
  stepTemplate:
    volumeMounts:
    - mountPath: /var/workdir
      name: workdir
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
    computeResources:
      requests:
        memory: 2Gi
      limits:
        memory: 2Gi
    args:
    - use
    - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - name: determine-image-expiration
    # We need git and toolbox image has it.
    image: registry.access.redhat.com/ubi9/toolbox:latest@sha256:c7cb288662bcc6c586b9cbc9d5249d726bca8f4a34348f7e661804ae20c0050a
    env:
    - name: SOURCE_BRANCH
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['pipelinesascode.tekton.dev/source-branch']
    - name: TARGET_BRANCH
      valueFrom:
        fieldRef:
          fieldPath: metadata.annotations['pipelinesascode.tekton.dev/branch']
    workingDir: /var/workdir/source
    script: |
      #!/usr/bin/env bash

      set -euo pipefail

      IMAGE_EXPIRES_AFTER="$(params.DEFAULT_IMAGE_EXPIRES_AFTER)"
      echo "Default image expiration: ${IMAGE_EXPIRES_AFTER}"
      echo "SOURCE_BRANCH: ${SOURCE_BRANCH}"
      echo "TARGET_BRANCH: ${TARGET_BRANCH}"

      # TODO(ROX-28001): Update the expiration logic for -fast releases.

      if [[ "${SOURCE_BRANCH}" == *konflux-release-like* ]]; then
        >&2 echo "This looks like a PR branch containing the magic string. Images won't expire."
        IMAGE_EXPIRES_AFTER=""
      fi

      if grep -qE '^((refs/heads/)?release-[0-9a-z]+\.[0-9a-z]+|refs/tags/[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?)$' <<< "${TARGET_BRANCH}"; then
        >&2 echo "This looks like a release branch or release tag push, or PR targeting the release branch. Images won't expire."
        IMAGE_EXPIRES_AFTER=""
      fi

      echo -n "${IMAGE_EXPIRES_AFTER}" | tee "$(results.IMAGE_EXPIRES_AFTER.path)"
